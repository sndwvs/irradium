# Description: WebRTC library for Telegram-desktop
# URL: https://github.com/desktop-app/tg_owt
# Maintainer: mara, mara at fail dot pp dot ua
# Depends on: cmake ninja pipewire pulseaudio libjpeg-turbo libxcomposite

name=tg_owt
version=20230730
release=1
_commit=e9d103e2480e0983bf464debc371b049cdd83648
_libsrtp_commit="a566a9cfcd619e8327784aa7cff4a1276dc1e895"
_libyuv_commit=4cd90347e78ff76755df2107009e900374aee9cd
_libvpx_commit=03265cd42b3783532de72f2ded5436652e6f5ce3
_abseil_commit=8c0b94e793a66495e0b1f34a5eb26bd7dc672db0
_crc32c_commit=21fc8ef30415a635e7351ffa0e5d5367943d4a94
source=(https://github.com/desktop-app/tg_owt/archive/${_commit}.tar.gz
        https://chromium.googlesource.com/webm/libvpx/+archive/${_libvpx_commit}.tar.gz
        https://chromium.googlesource.com/libyuv/libyuv/+archive/${_libyuv_commit}.tar.gz
        https://github.com/google/crc32c/archive/${_crc32c_commit}.tar.gz
        https://github.com/abseil/abseil-cpp/archive/${_abseil_commit}.tar.gz
        https://github.com/cisco/libsrtp/archive/$_libsrtp_commit.tar.gz
        ffmpeg7.patch)

build() {
    cd $name-${_commit}

    mkdir -pv libyuv libvpx
    bsdtar xzf ../../../${_libyuv_commit}.tar.gz -C libyuv
    bsdtar xzf ../../../${_libvpx_commit}.tar.gz -C libvpx
    bsdtar xzf ../../../${_crc32c_commit}.tar.gz --strip-components 1 -C src/third_party/crc32c/src
    bsdtar xzf ../../../${_abseil_commit}.tar.gz --strip-components 1 -C src/third_party/abseil-cpp
    bsdtar xzf ../../../$_libsrtp_commit.tar.gz --strip-components 1 -C src/third_party/libsrtp/

    mv libyuv src/third_party/
    mv libvpx src/third_party/

    # path to openssl include is intentionally wrong, so that it will not mess up srtp include headers
    patch -Np1 -i $SRC/ffmpeg7.patch

    cmake -B build -G Ninja . \
        -DTG_OWT_PACKAGED_BUILD=True \
        -DBUILD_SHARED_LIBS=OFF \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DCMAKE_BUILD_TYPE=MinSizeRel \
        -DTG_OWT_ARCH_ARMV7_USE_NEON=OFF
    cmake --build build
    DESTDIR=$PKG cmake --install build
}
